<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: meeting | CSE534 Fundamental of Network Project]]></title>
  <link href="http://zhuguanyu.github.io/fundamental_of_network/blog/categories/meeting/atom.xml" rel="self"/>
  <link href="http://zhuguanyu.github.io/fundamental_of_network/"/>
  <updated>2015-05-07T02:34:59-04:00</updated>
  <id>http://zhuguanyu.github.io/fundamental_of_network/</id>
  <author>
    <name><![CDATA[Guanyu Zhu, Wei-Ting Lin, Zhaowei Sun]]></name>
    <email><![CDATA[zhuguanyu2010@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Add tf-idf function module and using NLTK]]></title>
    <link href="http://zhuguanyu.github.io/fundamental_of_network/blog/2015/03/24/add-tf-idf-function-module-and-using-nltk/"/>
    <updated>2015-03-24T13:17:10-04:00</updated>
    <id>http://zhuguanyu.github.io/fundamental_of_network/blog/2015/03/24/add-tf-idf-function-module-and-using-nltk</id>
    <content type="html"><![CDATA[<p>This week we add tf-idf function module and using NLTK to help us lemmatize the text.</p>

<p>The following is the function that lemmatizate the text. <br/>
<figure class='code'><figcaption><span>Lemmatizations function </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">def</span> <span class="nf">tokenize</span><span class="p">(</span><span class="n">text</span><span class="p">):</span>
</span><span class='line'>    <span class="n">text</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span> <span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
</span><span class='line'>    <span class="n">tokens</span> <span class="o">=</span> <span class="n">nltk</span><span class="o">.</span><span class="n">tokenize</span><span class="o">.</span><span class="n">TreebankWordTokenizer</span><span class="p">()</span><span class="o">.</span><span class="n">tokenize</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
</span><span class='line'>    <span class="c">#print tokens</span>
</span><span class='line'>    <span class="c"># lemmatize words. try both noun and verb lemmatizations</span>
</span><span class='line'>    <span class="n">lmtzr</span> <span class="o">=</span> <span class="n">WordNetLemmatizer</span><span class="p">()</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nb">len</span><span class="p">(</span><span class="n">tokens</span><span class="p">)):</span>
</span><span class='line'>        <span class="c">#tokens[i] = tokens[i].strip(&amp;ldquo;&amp;lsquo;&amp;rdquo;)</span>
</span><span class='line'>            <span class="n">res</span> <span class="o">=</span> <span class="n">lmtzr</span><span class="o">.</span><span class="n">lemmatize</span><span class="p">(</span><span class="n">tokens</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">res</span> <span class="o">==</span> <span class="n">tokens</span><span class="p">[</span><span class="n">i</span><span class="p">]:</span>
</span><span class='line'>                <span class="n">tokens</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">lmtzr</span><span class="o">.</span><span class="n">lemmatize</span><span class="p">(</span><span class="n">tokens</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="s">&#39;v&amp;rsquo;)</span>
</span><span class='line'>            <span class="k">else</span><span class="p">:</span>
</span><span class='line'>                <span class="n">tokens</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">res</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="c"># don&#39;t return any single letters</span>
</span><span class='line'><span class="n">tokens</span> <span class="o">=</span> <span class="p">[</span><span class="n">t</span> <span class="k">for</span> <span class="n">t</span> <span class="ow">in</span> <span class="n">tokens</span> <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">t</span><span class="p">)</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="mi">1</span> <span class="ow">and</span> <span class="ow">not</span> <span class="n">t</span><span class="o">.</span><span class="n">isdigit</span><span class="p">()]</span>
</span><span class='line'><span class="k">return</span> <span class="n">tokens</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>We also use the <a href="http://www.nltk.org/nltk_data/" style="color:blue">NLTK DATA</a> help us to deal with the text analysis.
Here are the English names(<a href="http://zhuguanyu.github.io/fundamental_of_network/documents/male.txt" style="color:blue">male</a> and <a href="http://zhuguanyu.github.io/fundamental_of_network/documents/female.txt" style="color:blue">female</a>) provided by NLTK Data.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Deal with problems last week and New tasks]]></title>
    <link href="http://zhuguanyu.github.io/fundamental_of_network/blog/2015/03/09/deal-with-problems-last-week-and-new-tasks/"/>
    <updated>2015-03-09T14:36:39-04:00</updated>
    <id>http://zhuguanyu.github.io/fundamental_of_network/blog/2015/03/09/deal-with-problems-last-week-and-new-tasks</id>
    <content type="html"><![CDATA[<h3>What we have done:</h3>

<ul>
<li>Combinated the same threads(original posts and reply posts)</li>
<li>We used python to remove the punctations and some unrelated words(stopwords). The origal stopwords what we are using is <a href="http://zhuguanyu.github.io/fundamental_of_network/documents/stop_words_en.txt" style="color:blue">here</a>.</li>
</ul>


<h3>Problems and New tasks:</h3>

<p>The stopwords are not enough. We should also remove the people names, places names, etc. So we summary the unrelated words to the following 9 categories.</p>

<ol>
<li>Spurious data.</li>
<li>Links. Then we ignored the url, website links and email links in the posts.</li>
<li>Punctuations and Numbers.    <br/>
<!-- more --></li>
<li>Traceroute measurements.</li>
<li>Stop words. We use a list of stop words obtained from the SMART information retrieval system.</li>
<li>Organization and Human names.</li>
<li>Time-related and Place-related words. Such as day, night, NYC, San Jose, etc.</li>
<li>Some unrelated abbreviation words. Such like ICS, ISP, etc.</li>
<li>Others. This includes some entities words( like issue,information, etc) or phrase(like in order to)</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Task for This Week(03/02-03/09)]]></title>
    <link href="http://zhuguanyu.github.io/fundamental_of_network/blog/2015/03/02/task-for-this-week-03-slash-02-03-slash-09/"/>
    <updated>2015-03-02T17:36:39-05:00</updated>
    <id>http://zhuguanyu.github.io/fundamental_of_network/blog/2015/03/02/task-for-this-week-03-slash-02-03-slash-09</id>
    <content type="html"><![CDATA[<p>Today is our team regular meeting.  <br/>
In this meeting, we arrage the detail tasks for this week. In this week, we will try to complete the first two steps of <strong>Data Preprocessing</strong>.</p>

<ul>
<li><p>Collate threads.  <br/>
We have contacted with the author of our reference paper, one of Phd students in our university, he shared with us some experience about this project and give us some guide, here we want to say thanks for him. We will classify these dataset at the level of threads.</p></li>
<li><p>Remove spurious data and stop-words
In this part, we will firstly try to learn some basic tools.
What&rsquo;s we need to learn: <em>SMART information retrieval system, Stanford CoreNLP toolkit, tf-idf</em>. After that, we need try to remove spurious data and stop-words(e.g., articles, prepositions and pronouns).</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Submit Proposal]]></title>
    <link href="http://zhuguanyu.github.io/fundamental_of_network/blog/2015/02/15/submit-proposal/"/>
    <updated>2015-02-15T04:52:11-05:00</updated>
    <id>http://zhuguanyu.github.io/fundamental_of_network/blog/2015/02/15/submit-proposal</id>
    <content type="html"><![CDATA[<p>Today We submitted <a href="http://zhuguanyu.github.io/fundamental_of_network/documents/proposal.pdf" style="color:blue">our proposal</a>. But we still had some problems about this project.</p>

<p>Questions about the real-time</p>

<ul>
<li>Outage mail is sent in real-time by someone?</li>
<li>If the outage is recovered right now, so what should I do for the diagnostic in this situation?</li>
<li>what’s the meaning of real-time.</li>
</ul>


<p>This project is based on this Paper <a href="http://zhuguanyu.github.io/fundamental_of_network/documents/PAM2015.pdf" style="color:blue">Internet Outages, the Eyewitness Accounts: Analysis of the Outages Mailing List</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Discuss which project should we choose]]></title>
    <link href="http://zhuguanyu.github.io/fundamental_of_network/blog/2015/02/11/discuss-which-project-should-we-choose/"/>
    <updated>2015-02-11T04:22:11-05:00</updated>
    <id>http://zhuguanyu.github.io/fundamental_of_network/blog/2015/02/11/discuss-which-project-should-we-choose</id>
    <content type="html"><![CDATA[<p>Today We discussed the projects provided by the professor. We went through all the topics and talked about every details for each project. Based on our interests, we finaly picked out topic 5 and topic 8.(Refer to <a href="http://zhuguanyu.github.io/fundamental_of_network/documents/CSE534Projects.pdf" style="color:blue">Projects</a>). Then we found our professor, and talked with her to know what these two projects do. At last, we all took the topic 8(mailing list outage) as our project topic.</p>
]]></content>
  </entry>
  
</feed>
